<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="u1" elementType="Argument">
            <stringProp name="Argument.name">u1</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4db连接池</stringProp>
          </elementProp>
          <elementProp name="u2" elementType="Argument">
            <stringProp name="Argument.name">u2</stringProp>
            <stringProp name="Argument.value">root</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb" elementType="Argument">
            <stringProp name="Argument.name">udb</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="udb_password" elementType="Argument">
            <stringProp name="Argument.name">udb_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="umysql" elementType="Argument">
            <stringProp name="Argument.name">umysql</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql用户</stringProp>
          </elementProp>
          <elementProp name="umysql_password" elementType="Argument">
            <stringProp name="Argument.name">umysql_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">mysql密码</stringProp>
          </elementProp>
          <elementProp name="user" elementType="Argument">
            <stringProp name="Argument.name">user</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4用户名</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4密码</stringProp>
          </elementProp>
          <elementProp name="u3" elementType="Argument">
            <stringProp name="Argument.name">u3</stringProp>
            <stringProp name="Argument.value">mysql</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4 mysql连接池</stringProp>
          </elementProp>
          <elementProp name="node" elementType="Argument">
            <stringProp name="Argument.name">node</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.71)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node2</stringProp>
          </elementProp>
          <elementProp name="node4" elementType="Argument">
            <stringProp name="Argument.name">node4</stringProp>
            <stringProp name="Argument.value">${__P(host,192.168.1.73)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">node4</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">${__P(port,9105)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dburl" elementType="Argument">
            <stringProp name="Argument.name">dburl</stringProp>
            <stringProp name="Argument.value">${__P(dburl,jdbc:linkoopdb:tcp://192.168.1.73:9205/ldb)}</stringProp>
            <stringProp name="Argument.desc">db的url</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_url" elementType="Argument">
            <stringProp name="Argument.name">mysql_url</stringProp>
            <stringProp name="Argument.value">jdbc:mysql://192.168.1.73:3306/jmeter_istreamsql?useSSL=false</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="zoo_connect" elementType="Argument">
            <stringProp name="Argument.name">zoo_connect</stringProp>
            <stringProp name="Argument.value">node1:2181,node2:2181,node9:2181/linkoopdb/luyao</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="kafka_server" elementType="Argument">
            <stringProp name="Argument.name">kafka_server</stringProp>
            <stringProp name="Argument.value">node6:29096</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="zoo1_connect" elementType="Argument">
            <stringProp name="Argument.name">zoo1_connect</stringProp>
            <stringProp name="Argument.value">node1:2181,node2:2181,node3:2181/istream/node6/kafka</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="kafka1_server" elementType="Argument">
            <stringProp name="Argument.name">kafka1_server</stringProp>
            <stringProp name="Argument.value">node6:9096</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="t_source_files_03_path1" elementType="Argument">
            <stringProp name="Argument.name">t_source_files_03_path1</stringProp>
            <stringProp name="Argument.value">hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/customer_demographics/part-00000-c3b2593c-1951-4cae-9b0c-39621aaf82c6-c000.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="t_jdbcsource_formatted_bch_03_path1" elementType="Argument">
            <stringProp name="Argument.name">t_jdbcsource_formatted_bch_03_path1</stringProp>
            <stringProp name="Argument.value">hdfs://192.168.1.70:8020/tmp/tpcds_stream_bch100/customer_demographics/part-00000-c3b2593c-1951-4cae-9b0c-39621aaf82c6-c000.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sc_enginepallas" elementType="Argument">
            <stringProp name="Argument.name">sc_enginepallas</stringProp>
            <stringProp name="Argument.value">${__P(engine,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="a" elementType="Argument">
            <stringProp name="Argument.name">a</stringProp>
            <stringProp name="Argument.value">jly1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="a_password" elementType="Argument">
            <stringProp name="Argument.name">a_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="b" elementType="Argument">
            <stringProp name="Argument.name">b</stringProp>
            <stringProp name="Argument.value">jly2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="b_password" elementType="Argument">
            <stringProp name="Argument.name">b_password</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb" enabled="true">
        <stringProp name="dataSource">${u1}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${dburl}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${u1}</stringProp>
        <stringProp name="password">123456</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb2" enabled="true">
        <stringProp name="dataSource">${u2}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${dburl}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${a}</stringProp>
        <stringProp name="password">123456</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="linkoopdb3" enabled="true">
        <stringProp name="dataSource">${u4}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${dburl}</stringProp>
        <stringProp name="driver">com.datapps.linkoopdb.jdbc.JdbcDriver</stringProp>
        <stringProp name="username">${b}</stringProp>
        <stringProp name="password">123456</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="mysql" enabled="true">
        <stringProp name="dataSource">${u3}</stringProp>
        <stringProp name="poolMax">20</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">${mysql_url}</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">${umysql}</stringProp>
        <stringProp name="password">123456</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
        <stringProp name="maximumValue">9999999999</stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="outputFormat">000</stringProp>
        <boolProp name="perThread">false</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">number</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 维表join优化支持级别在百G的维表数据量" enabled="false"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists film;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;film&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;user_click_stream&apos;
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film_actor3(actor_id int, film_id int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film_actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos;,   &apos;asyncEnabled&apos;:&apos;true&apos;,   &apos;orderedWait&apos;:&apos;false&apos; );" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create stream film_actor3(actor_id int, film_id int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;film_actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;,
  &apos;asyncEnabled&apos;:&apos;true&apos;,
  &apos;orderedWait&apos;:&apos;false&apos;
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select user_id,film.film_id,title,release_year,user_rank from user_click_stream left join film on user_click_stream.film_id = film.film_id;" enabled="false">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 30000;
select user_id,film.film_id,title,release_year,user_rank from user_click_stream left join film on user_click_stream.film_id = film.film_id;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                <stringProp name="148829788">4000	null	null	null	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-002-select user_id,film.film_id,title,release_year,user_rank from user_click_stream right join film on user_click_stream.film_id = film.film_id;" enabled="false">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 20000;
select user_id,film.film_id,title,release_year,user_rank from user_click_stream right join film on user_click_stream.film_id = film.film_id;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                <stringProp name="148829788">4000	null	null	null	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-003-select user_id,film.film_id,title,release_year,user_rank from film left join user_click_stream on user_click_stream.film_id = film.film_id;" enabled="false">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 20000;
select user_id,film.film_id,title,release_year,user_rank from film left join user_click_stream on user_click_stream.film_id = film.film_id;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                <stringProp name="148829788">4000	null	null	null	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-004-select user_id,film.film_id,title,release_year,user_rank from film left join user_click_stream on user_click_stream.film_id = film.film_id;" enabled="false">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 20000;
select user_id,film.film_id,title,release_year,user_rank from film left join user_click_stream on user_click_stream.film_id = film.film_id;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                <stringProp name="148829788">4000	null	null	null	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-005-select user_id,film.film_id,title,release_year,user_rank from user_click_stream join film on user_click_stream.film_id = film.film_id;" enabled="false">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 20000;
select user_id,film.film_id,title,release_year,user_rank from user_click_stream join film on user_click_stream.film_id = film.film_id;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                <stringProp name="489706716">3000	12	ALASKA PHANTOM	2006-01-01	4</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-006-select user_id,film.film_id,actor.actor_id from user_click_stream,film,film_actor3,actor where user_click_stream.film_id = film.film_id AND film.film_id=film_actor3.film_id  AND film_actor3.actor_id=actor.actor_id;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 20000;
select user_id,film.film_id,actor.actor_id from user_click_stream,film,film_actor3,actor where
user_click_stream.film_id = film.film_id
AND film.film_id=film_actor3.film_id
 AND film_actor3.actor_id=actor.actor_id;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="107680839">1000	10	29</stringProp>
                <stringProp name="107680866">1000	10	35</stringProp>
                <stringProp name="107680868">1000	10	37</stringProp>
                <stringProp name="107680958">1000	10	64</stringProp>
                <stringProp name="-956862441">1000	10	117</stringProp>
                <stringProp name="-956862353">1000	10	142</stringProp>
                <stringProp name="-956862317">1000	10	157</stringProp>
                <stringProp name="-956862223">1000	10	188</stringProp>
                <stringProp name="-88802822">2000	11	40</stringProp>
                <stringProp name="-88802697">2000	11	81</stringProp>
                <stringProp name="-88802667">2000	11	90</stringProp>
                <stringProp name="1542077200">2000	11	174</stringProp>
                <stringProp name="-285286560">3000	12	37</stringProp>
                <stringProp name="-285286438">3000	12	75</stringProp>
                <stringProp name="-253950854">3000	12	105</stringProp>
                <stringProp name="-253950850">3000	12	109</stringProp>
                <stringProp name="-253950729">3000	12	146</stringProp>
                <stringProp name="-253950635">3000	12	177</stringProp>
                <stringProp name="-253950611">3000	12	180</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 jdbc_source" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 left_join_1_ &apos;cacheStrategy&apos;:&apos;lru&apos;" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists left_join_result11;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM film_static_jdbc_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
  &apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;tableName&apos;: &apos;film_static&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
  &apos;username&apos;: &apos;admin&apos;,
  &apos;password&apos;: &apos;123456&apos;,
  &apos;fetchSize&apos;: &apos;1000&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream left_join_result11(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 3; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream left join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into left_join_result11 select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream left join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  left_join_result1;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists left_join_result1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 left_join_1_&apos;cacheStrategy&apos;:&apos;all&apos;" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists left_join_result1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM film_static_jdbc_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
  &apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;tableName&apos;: &apos;film_static&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
  &apos;username&apos;: &apos;admin&apos;,
  &apos;password&apos;: &apos;123456&apos;,
  &apos;fetchSize&apos;: &apos;1000&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream left_join_result1(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 3; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream left join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 5;
insert into left_join_result1 select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream left join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  left_join_result1;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists left_join_result1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 right_join_1 &apos;cacheStrategy&apos;:&apos;lru&apos;" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists right_join_result1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM film_static_jdbc_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
  &apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;tableName&apos;: &apos;film_static&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
  &apos;username&apos;: &apos;admin&apos;,
  &apos;password&apos;: &apos;123456&apos;,
  &apos;fetchSize&apos;: &apos;1000&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream right_join_result1(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 10; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into right_join_result1 select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  right_join_result1;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists right_join_result1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 right_join_1 &apos;cacheStrategy&apos;:&apos;all&apos;" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists right_join_result11;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM film_static_jdbc_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
  &apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;tableName&apos;: &apos;film_static&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
  &apos;username&apos;: &apos;admin&apos;,
  &apos;password&apos;: &apos;123456&apos;,
  &apos;fetchSize&apos;: &apos;1000&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream right_join_result11(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 10; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into right_join_result11 select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  right_join_result11;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists right_join_result11;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 right_join_1 &apos;cacheStrategy&apos;:&apos;all&apos;" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists right_join_result2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM film_static_jdbc_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
  &apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;tableName&apos;: &apos;film_static&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
  &apos;username&apos;: &apos;admin&apos;,
  &apos;password&apos;: &apos;123456&apos;,
  &apos;fetchSize&apos;: &apos;1000&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;file&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream right_join_result2(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 10; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into right_join_result2 select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  right_join_result2;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists right_join_result2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 join" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists join_result1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM film_static_jdbc_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
  &apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;tableName&apos;: &apos;film_static&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
  &apos;username&apos;: &apos;admin&apos;,
  &apos;password&apos;: &apos;123456&apos;,
  &apos;fetchSize&apos;: &apos;1000&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;file&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream join_result1(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 10; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into join_result1 select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  join_result1;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists join_result1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 left_join_2" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists left_join_result2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM film_static_jdbc_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
  &apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;tableName&apos;: &apos;film_static&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
  &apos;username&apos;: &apos;admin&apos;,
  &apos;password&apos;: &apos;123456&apos;,
  &apos;fetchSize&apos;: &apos;1000&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream left_join_result2(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 10; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 5;
insert into left_join_result2 select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from film_static_jdbc_source left join user_click_stream on user_click_stream.film_id = film_static_jdbc_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  left_join_result2;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists left_join_result2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 right_join_2" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists right_join_result2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM film_static_jdbc_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
  &apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;tableName&apos;: &apos;film_static&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
  &apos;username&apos;: &apos;admin&apos;,
  &apos;password&apos;: &apos;123456&apos;,
  &apos;fetchSize&apos;: &apos;1000&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream right_join_result2(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 10; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into right_join_result2 select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from film_static_jdbc_source right join user_click_stream on user_click_stream.film_id = film_static_jdbc_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  right_join_result2;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists right_join_result2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 left_join_3 &apos;cacheStrategy&apos;:&apos;lru&apos;时的所有参数" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists left_join_result1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM film_static_jdbc_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
  &apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;tableName&apos;: &apos;film_static&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
  &apos;username&apos;: &apos;admin&apos;,
  &apos;password&apos;: &apos;123456&apos;,
  &apos;fetchSize&apos;: &apos;1000&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;,
  &apos;cacheSize&apos;:&apos;100000&apos;,
  &apos;cacheTTLMs&apos;:&apos;6000000&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream left_join_result1(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 3; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream left join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into left_join_result1 select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream left join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  left_join_result1;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists left_join_result1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 多表join" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 多表join memory_lru" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE STREAM film_static_jdbc_source ( FILM_ID bigint, TITLE VARCHAR(30), DESCRIPTION1 VARCHAR(200), DESCRIPTION2 VARCHAR(200), DESCRIPTION3 VARCHAR(200), DESCRIPTION4 VARCHAR(200), DESCRIPTION5 VARCHAR(200), DESCRIPTION6 VARCHAR(200), RELEASE_YEAR INTEGER, LANGUAGE_ID INTEGER ) PROPERTIES (   &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;tableName&apos;: &apos;film_static&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,   &apos;username&apos;: &apos;admin&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;fetchSize&apos;: &apos;1000&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; ) ;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">	CREATE STREAM film_static_jdbc_source (
	FILM_ID bigint,
	TITLE VARCHAR(30),
	DESCRIPTION1 VARCHAR(200),
	DESCRIPTION2 VARCHAR(200),
	DESCRIPTION3 VARCHAR(200),
	DESCRIPTION4 VARCHAR(200),
	DESCRIPTION5 VARCHAR(200),
	DESCRIPTION6 VARCHAR(200),
	RELEASE_YEAR INTEGER,
	LANGUAGE_ID INTEGER
	) PROPERTIES (
	  &apos;type&apos;: &apos;source&apos;,
	  &apos;connector&apos;: &apos;jdbc&apos;,
	  &apos;tableName&apos;: &apos;film_static&apos;,
	  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
	  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
	  &apos;username&apos;: &apos;admin&apos;,
	  &apos;password&apos;: &apos;123456&apos;,
	  &apos;fetchSize&apos;: &apos;1000&apos;,
	  &apos;dataType&apos;: &apos;static&apos;,
	  &apos;cacheType&apos;: &apos;memory&apos;,
	  &apos;cacheStrategy&apos;:&apos;lru&apos;
	) ;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film_actor3(actor_id int, film_id int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:mysql://localhost:3306/test&apos;,   &apos;username&apos;: &apos;root&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film_actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos;,   &apos;asyncEnabled&apos;:&apos;true&apos;,   &apos;orderedWait&apos;:&apos;false&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream film_actor3(actor_id int, film_id bigint) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;film_actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;,
   &apos;asyncEnabled&apos;:&apos;false&apos;,
  &apos;orderedWait&apos;:&apos;false&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;${dburl}&apos;,   &apos;username&apos;: &apos;${udb}&apos;,   &apos;password&apos;: &apos;${udb_password}&apos;,   &apos;batchSize&apos;: &apos;100&apos;,   &apos;tableName&apos;: &apos;click&apos;,   &apos;increaseColumn&apos;:&apos;film_id&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream join_result_tables(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream join_result_tables(user_id int,film_id bigint,actor_id int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_QUERY_LATENCY_MILLS 20000; insert into join_result_tables select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where user_click_stream.film_id = film_static_jdbc_source.film_id AND film_static_jdbc_source.film_id=film_actor3.film_id  AND film_actor3.actor_id=actor.actor_id;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into join_result_tables select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where
user_click_stream.film_id = film_static_jdbc_source.film_id
AND film_static_jdbc_source.film_id=film_actor3.film_id
 AND film_actor3.actor_id=actor.actor_id;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-002-select * from  join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  join_result_tables;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">60000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists film_static_jdbc_source; drop stream if exists user_click_stream; drop stream if exists actor; drop stream if exists film_actor3; drop stream if exists join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 多表join file_lru" enabled="false"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE STREAM film_static_jdbc_source ( FILM_ID bigint, TITLE VARCHAR(30), DESCRIPTION1 VARCHAR(200), DESCRIPTION2 VARCHAR(200), DESCRIPTION3 VARCHAR(200), DESCRIPTION4 VARCHAR(200), DESCRIPTION5 VARCHAR(200), DESCRIPTION6 VARCHAR(200), RELEASE_YEAR INTEGER, LANGUAGE_ID INTEGER ) PROPERTIES (   &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;tableName&apos;: &apos;film_static&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,   &apos;username&apos;: &apos;admin&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;fetchSize&apos;: &apos;1000&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; ) ;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM film_static_jdbc_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
  &apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;tableName&apos;: &apos;film_static&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
  &apos;username&apos;: &apos;admin&apos;,
  &apos;password&apos;: &apos;123456&apos;,
  &apos;fetchSize&apos;: &apos;1000&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
) ;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;file&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film_actor3(actor_id int, film_id int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:mysql://localhost:3306/test&apos;,   &apos;username&apos;: &apos;root&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film_actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos;,   &apos;asyncEnabled&apos;:&apos;true&apos;,   &apos;orderedWait&apos;:&apos;false&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream film_actor3(actor_id int, film_id int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;film_actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;file&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;,
   &apos;asyncEnabled&apos;:&apos;true&apos;,
  &apos;orderedWait&apos;:&apos;false&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;${dburl}&apos;,   &apos;username&apos;: &apos;${udb}&apos;,   &apos;password&apos;: &apos;${udb_password}&apos;,   &apos;batchSize&apos;: &apos;100&apos;,   &apos;tableName&apos;: &apos;click&apos;,   &apos;increaseColumn&apos;:&apos;film_id&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream join_result_tables(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream join_result_tables1(user_id int,film_id bigint,actor_id int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_QUERY_LATENCY_MILLS 20000; insert into join_result_tables select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where user_click_stream.film_id = film_static_jdbc_source.film_id AND film_static_jdbc_source.film_id=film_actor3.film_id  AND film_actor3.actor_id=actor.actor_id;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into join_result_tables1 select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where
user_click_stream.film_id = film_static_jdbc_source.film_id
AND film_static_jdbc_source.film_id=film_actor3.film_id
 AND film_actor3.actor_id=actor.actor_id;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-002-select * from  join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  join_result_tables1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">60000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists film_static_jdbc_source; drop stream if exists user_click_stream; drop stream if exists actor; drop stream if exists film_actor3; drop stream if exists join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 多表join memory_all" enabled="false"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables2;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE STREAM film_static_jdbc_source ( FILM_ID bigint, TITLE VARCHAR(30), DESCRIPTION1 VARCHAR(200), DESCRIPTION2 VARCHAR(200), DESCRIPTION3 VARCHAR(200), DESCRIPTION4 VARCHAR(200), DESCRIPTION5 VARCHAR(200), DESCRIPTION6 VARCHAR(200), RELEASE_YEAR INTEGER, LANGUAGE_ID INTEGER ) PROPERTIES (   &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;tableName&apos;: &apos;film_static&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,   &apos;username&apos;: &apos;admin&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;fetchSize&apos;: &apos;1000&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; ) ;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM film_static_jdbc_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
  &apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;tableName&apos;: &apos;film_static&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
  &apos;username&apos;: &apos;admin&apos;,
  &apos;password&apos;: &apos;123456&apos;,
  &apos;fetchSize&apos;: &apos;1000&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
) ;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film_actor3(actor_id int, film_id int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:mysql://localhost:3306/test&apos;,   &apos;username&apos;: &apos;root&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film_actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos;,   &apos;asyncEnabled&apos;:&apos;true&apos;,   &apos;orderedWait&apos;:&apos;false&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream film_actor3(actor_id int, film_id int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;film_actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;,
   &apos;asyncEnabled&apos;:&apos;true&apos;,
  &apos;orderedWait&apos;:&apos;false&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;${dburl}&apos;,   &apos;username&apos;: &apos;${udb}&apos;,   &apos;password&apos;: &apos;${udb_password}&apos;,   &apos;batchSize&apos;: &apos;100&apos;,   &apos;tableName&apos;: &apos;click&apos;,   &apos;increaseColumn&apos;:&apos;film_id&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream join_result_tables(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream join_result_tables2(user_id int,film_id bigint,actor_id int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_QUERY_LATENCY_MILLS 20000; insert into join_result_tables select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where user_click_stream.film_id = film_static_jdbc_source.film_id AND film_static_jdbc_source.film_id=film_actor3.film_id  AND film_actor3.actor_id=actor.actor_id;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 8;
insert into join_result_tables2 select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where
user_click_stream.film_id = film_static_jdbc_source.film_id
AND film_static_jdbc_source.film_id=film_actor3.film_id
 AND film_actor3.actor_id=actor.actor_id;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-002-select * from  join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  join_result_tables2;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">60000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists film_static_jdbc_source; drop stream if exists user_click_stream; drop stream if exists actor; drop stream if exists film_actor3; drop stream if exists join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables2;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 多表join memory_all" enabled="false"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables2;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE STREAM film_static_jdbc_source ( FILM_ID bigint, TITLE VARCHAR(30), DESCRIPTION1 VARCHAR(200), DESCRIPTION2 VARCHAR(200), DESCRIPTION3 VARCHAR(200), DESCRIPTION4 VARCHAR(200), DESCRIPTION5 VARCHAR(200), DESCRIPTION6 VARCHAR(200), RELEASE_YEAR INTEGER, LANGUAGE_ID INTEGER ) PROPERTIES (   &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;tableName&apos;: &apos;film_static&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,   &apos;username&apos;: &apos;admin&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;fetchSize&apos;: &apos;1000&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; ) ;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM film_static_jdbc_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
  &apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;tableName&apos;: &apos;film_static&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
  &apos;username&apos;: &apos;admin&apos;,
  &apos;password&apos;: &apos;123456&apos;,
  &apos;fetchSize&apos;: &apos;1000&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
) ;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film_actor3(actor_id int, film_id int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:mysql://localhost:3306/test&apos;,   &apos;username&apos;: &apos;root&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film_actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos;,   &apos;asyncEnabled&apos;:&apos;true&apos;,   &apos;orderedWait&apos;:&apos;false&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream film_actor3(actor_id int, film_id int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;film_actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;${dburl}&apos;,   &apos;username&apos;: &apos;${udb}&apos;,   &apos;password&apos;: &apos;${udb_password}&apos;,   &apos;batchSize&apos;: &apos;100&apos;,   &apos;tableName&apos;: &apos;click&apos;,   &apos;increaseColumn&apos;:&apos;film_id&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream join_result_tables(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream join_result_tables2(user_id int,film_id bigint,actor_id int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_QUERY_LATENCY_MILLS 20000; insert into join_result_tables select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where user_click_stream.film_id = film_static_jdbc_source.film_id AND film_static_jdbc_source.film_id=film_actor3.film_id  AND film_actor3.actor_id=actor.actor_id;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 8;
insert into join_result_tables2 select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where
user_click_stream.film_id = film_static_jdbc_source.film_id
AND film_static_jdbc_source.film_id=film_actor3.film_id
 AND film_actor3.actor_id=actor.actor_id;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-002-select * from  join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  join_result_tables2;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">60000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists film_static_jdbc_source; drop stream if exists user_click_stream; drop stream if exists actor; drop stream if exists film_actor3; drop stream if exists join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables2;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 多表join file_all" enabled="false"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables3;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE STREAM film_static_jdbc_source ( FILM_ID bigint, TITLE VARCHAR(30), DESCRIPTION1 VARCHAR(200), DESCRIPTION2 VARCHAR(200), DESCRIPTION3 VARCHAR(200), DESCRIPTION4 VARCHAR(200), DESCRIPTION5 VARCHAR(200), DESCRIPTION6 VARCHAR(200), RELEASE_YEAR INTEGER, LANGUAGE_ID INTEGER ) PROPERTIES (   &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;tableName&apos;: &apos;film_static&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,   &apos;username&apos;: &apos;admin&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;fetchSize&apos;: &apos;1000&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; ) ;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM film_static_jdbc_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
  &apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;tableName&apos;: &apos;film_static&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,
  &apos;username&apos;: &apos;admin&apos;,
  &apos;password&apos;: &apos;123456&apos;,
  &apos;fetchSize&apos;: &apos;1000&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
) ;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;file&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film_actor3(actor_id int, film_id int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:mysql://localhost:3306/test&apos;,   &apos;username&apos;: &apos;root&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film_actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos;,   &apos;asyncEnabled&apos;:&apos;true&apos;,   &apos;orderedWait&apos;:&apos;false&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream film_actor3(actor_id int, film_id int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;film_actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;file&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;,
   &apos;asyncEnabled&apos;:&apos;true&apos;,
  &apos;orderedWait&apos;:&apos;false&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;${dburl}&apos;,   &apos;username&apos;: &apos;${udb}&apos;,   &apos;password&apos;: &apos;${udb_password}&apos;,   &apos;batchSize&apos;: &apos;100&apos;,   &apos;tableName&apos;: &apos;click&apos;,   &apos;increaseColumn&apos;:&apos;film_id&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream join_result_tables(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream join_result_tables3(user_id int,film_id bigint,actor_id int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_QUERY_LATENCY_MILLS 20000; insert into join_result_tables select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where user_click_stream.film_id = film_static_jdbc_source.film_id AND film_static_jdbc_source.film_id=film_actor3.film_id  AND film_actor3.actor_id=actor.actor_id;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 9;
insert into join_result_tables3 select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where
user_click_stream.film_id = film_static_jdbc_source.film_id
AND film_static_jdbc_source.film_id=film_actor3.film_id
 AND film_actor3.actor_id=actor.actor_id;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-002-select * from  join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  join_result_tables3;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">60000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists film_static_jdbc_source; drop stream if exists user_click_stream; drop stream if exists actor; drop stream if exists film_actor3; drop stream if exists join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_jdbc_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables3;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 filesystem_csv_source" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 left_join_1" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists left_join_result1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM 	 (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.72:8020/node8/linkoopdb/manyi/data/100g.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
   &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream left_join_result1(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;,
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 3; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream left join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into left_join_result1 select user_id,film_static_file_source.film_id,title,release_year,user_rank from user_click_stream left join film_static_file_source on user_click_stream.film_id = film_static_file_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  left_join_result1;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists left_join_result1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 right_join_1" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists right_join_result1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM film_static_file_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node8/linkoopdb/manyi/data/static_table&apos;,
 &apos;format&apos;:&apos;csv&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream right_join_result1(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 10; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into right_join_result1 select user_id,film_static_file_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_file_source on user_click_stream.film_id = film_static_file_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  right_join_result1;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists right_join_result1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 join" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists join_result;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM film_static_file_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node8/linkoopdb/manyi/data/static_table&apos;,
 &apos;format&apos;:&apos;csv&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 10; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into join_result select user_id,film_static_file_source.film_id,title,release_year,user_rank from user_click_stream join film_static_file_source on user_click_stream.film_id = film_static_file_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  join_result;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists join_result;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 left_join_2" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists left_join_result2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM 	film_static_file_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.72:8020/node8/linkoopdb/manyi/data/100g.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
   &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream left_join_result2(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 10; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into left_join_result2 select user_id,film_static_file_source.film_id,title,release_year,user_rank from film_static_file_source left join user_click_stream on user_click_stream.film_id = film_static_file_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  left_join_result2;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists left_join_result2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 right_join_2" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists right_join_result2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film(film_id int, title varchar(65530), release_year varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM film_static_file_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node8/linkoopdb/manyi/data/static_table&apos;,
 &apos;format&apos;:&apos;csv&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id bigint, film_id int, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;user_click_stream&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream left_join_result(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream right_join_result2(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_EXECUTE_PARALLELISM 10; insert into left_join_result select user_id,film_static_jdbc_source.film_id,title,release_year,user_rank from user_click_stream right join film_static_jdbc_source on user_click_stream.film_id = film_static_jdbc_source.film_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into right_join_result2 select user_id,film_static_file_source.film_id,title,release_year,user_rank from film_static_file_source right join user_click_stream on user_click_stream.film_id = film_static_file_source.film_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  right_join_result2;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists right_join_result2;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 多表join" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE STREAM film_static_jdbc_source ( FILM_ID bigint, TITLE VARCHAR(30), DESCRIPTION1 VARCHAR(200), DESCRIPTION2 VARCHAR(200), DESCRIPTION3 VARCHAR(200), DESCRIPTION4 VARCHAR(200), DESCRIPTION5 VARCHAR(200), DESCRIPTION6 VARCHAR(200), RELEASE_YEAR INTEGER, LANGUAGE_ID INTEGER ) PROPERTIES (   &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;tableName&apos;: &apos;film_static&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,   &apos;username&apos;: &apos;admin&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;fetchSize&apos;: &apos;1000&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; ) ;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">CREATE STREAM film_static_file_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node8/linkoopdb/manyi/data/static_table&apos;,
 &apos;format&apos;:&apos;csv&apos;,
   &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
) ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;${dburl}&apos;,   &apos;username&apos;: &apos;${udb}&apos;,   &apos;password&apos;: &apos;${udb_password}&apos;,   &apos;batchSize&apos;: &apos;100&apos;,   &apos;tableName&apos;: &apos;click&apos;,   &apos;increaseColumn&apos;:&apos;film_id&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream join_result_tables(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">create stream join_result_tables(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_QUERY_LATENCY_MILLS 20000; insert into join_result_tables select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where user_click_stream.film_id = film_static_jdbc_source.film_id AND film_static_jdbc_source.film_id=film_actor3.film_id  AND film_actor3.actor_id=actor.actor_id;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">set session STREAM_QUERY_LATENCY_MILLS 20000;
insert into join_result_tables select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_file_source,film_actor3,actor where
user_click_stream.film_id = film_static_file_source.film_id
AND film_static_file_source.film_id=film_actor3.film_id
 AND film_actor3.actor_id=actor.actor_id;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-002-select * from  join_result_tables;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select * from  join_result_tables;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                  <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                  <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                  <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                  <stringProp name="148829788">4000	null	null	null	1</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists film_static_jdbc_source; drop stream if exists user_click_stream; drop stream if exists actor; drop stream if exists film_actor3; drop stream if exists join_result_tables;" enabled="true">
              <stringProp name="dataSource">${u1}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 多表join" enabled="false"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 多表join memory_lru" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables_file1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE STREAM film_static_jdbc_source ( FILM_ID bigint, TITLE VARCHAR(30), DESCRIPTION1 VARCHAR(200), DESCRIPTION2 VARCHAR(200), DESCRIPTION3 VARCHAR(200), DESCRIPTION4 VARCHAR(200), DESCRIPTION5 VARCHAR(200), DESCRIPTION6 VARCHAR(200), RELEASE_YEAR INTEGER, LANGUAGE_ID INTEGER ) PROPERTIES (   &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;tableName&apos;: &apos;film_static&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,   &apos;username&apos;: &apos;admin&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;fetchSize&apos;: &apos;1000&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; ) ;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM film_static_file_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.72:8020/node8/linkoopdb/manyi/data/100g.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
   &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
) ;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film_actor3(actor_id int, film_id int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:mysql://localhost:3306/test&apos;,   &apos;username&apos;: &apos;root&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film_actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos;,   &apos;asyncEnabled&apos;:&apos;true&apos;,   &apos;orderedWait&apos;:&apos;false&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream film_actor3(actor_id int, film_id int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;film_actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;,
   &apos;asyncEnabled&apos;:&apos;false&apos;,
  &apos;orderedWait&apos;:&apos;false&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;${dburl}&apos;,   &apos;username&apos;: &apos;${udb}&apos;,   &apos;password&apos;: &apos;${udb_password}&apos;,   &apos;batchSize&apos;: &apos;100&apos;,   &apos;tableName&apos;: &apos;click&apos;,   &apos;increaseColumn&apos;:&apos;film_id&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream join_result_tables(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream join_result_tables_file1(user_id int,film_id bigint,actor_id int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_QUERY_LATENCY_MILLS 20000; insert into join_result_tables select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where user_click_stream.film_id = film_static_jdbc_source.film_id AND film_static_jdbc_source.film_id=film_actor3.film_id  AND film_actor3.actor_id=actor.actor_id;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 9;
insert into join_result_tables_file1 select user_id,film_static_file_source.film_id,actor.actor_id from user_click_stream,film_static_file_source,film_actor3,actor where
user_click_stream.film_id = film_static_file_source.film_id
AND film_static_file_source.film_id=film_actor3.film_id
 AND film_actor3.actor_id=actor.actor_id;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-002-select * from  join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  join_result_tables_file1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">60000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists film_static_jdbc_source; drop stream if exists user_click_stream; drop stream if exists actor; drop stream if exists film_actor3; drop stream if exists join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables_file1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 多表join file_lru" enabled="false"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables_file2;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE STREAM film_static_jdbc_source ( FILM_ID bigint, TITLE VARCHAR(30), DESCRIPTION1 VARCHAR(200), DESCRIPTION2 VARCHAR(200), DESCRIPTION3 VARCHAR(200), DESCRIPTION4 VARCHAR(200), DESCRIPTION5 VARCHAR(200), DESCRIPTION6 VARCHAR(200), RELEASE_YEAR INTEGER, LANGUAGE_ID INTEGER ) PROPERTIES (   &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;tableName&apos;: &apos;film_static&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,   &apos;username&apos;: &apos;admin&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;fetchSize&apos;: &apos;1000&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; ) ;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM film_static_file_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node8/linkoopdb/manyi/data/static_table&apos;,
 &apos;format&apos;:&apos;csv&apos;,
   &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;file&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
) ;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film_actor3(actor_id int, film_id int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:mysql://localhost:3306/test&apos;,   &apos;username&apos;: &apos;root&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film_actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos;,   &apos;asyncEnabled&apos;:&apos;true&apos;,   &apos;orderedWait&apos;:&apos;false&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream film_actor3(actor_id int, film_id int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;film_actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;,
   &apos;asyncEnabled&apos;:&apos;true&apos;,
  &apos;orderedWait&apos;:&apos;false&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;${dburl}&apos;,   &apos;username&apos;: &apos;${udb}&apos;,   &apos;password&apos;: &apos;${udb_password}&apos;,   &apos;batchSize&apos;: &apos;100&apos;,   &apos;tableName&apos;: &apos;click&apos;,   &apos;increaseColumn&apos;:&apos;film_id&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream join_result_tables(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream join_result_tables_file2(user_id int,film_id bigint,actor_id int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_QUERY_LATENCY_MILLS 20000; insert into join_result_tables select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where user_click_stream.film_id = film_static_jdbc_source.film_id AND film_static_jdbc_source.film_id=film_actor3.film_id  AND film_actor3.actor_id=actor.actor_id;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into join_result_tables_file2 select user_id,film_static_file_source.film_id,actor.actor_id from user_click_stream,film_static_file_source,film_actor3,actor where
user_click_stream.film_id = film_static_file_source.film_id
AND film_static_file_source.film_id=film_actor3.film_id
 AND film_actor3.actor_id=actor.actor_id;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-002-select * from  join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  join_result_tables_file2;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">60000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists film_static_jdbc_source; drop stream if exists user_click_stream; drop stream if exists actor; drop stream if exists film_actor3; drop stream if exists join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables_file2;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 多表join memory_all" enabled="false"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables_file3;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE STREAM film_static_jdbc_source ( FILM_ID bigint, TITLE VARCHAR(30), DESCRIPTION1 VARCHAR(200), DESCRIPTION2 VARCHAR(200), DESCRIPTION3 VARCHAR(200), DESCRIPTION4 VARCHAR(200), DESCRIPTION5 VARCHAR(200), DESCRIPTION6 VARCHAR(200), RELEASE_YEAR INTEGER, LANGUAGE_ID INTEGER ) PROPERTIES (   &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;tableName&apos;: &apos;film_static&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,   &apos;username&apos;: &apos;admin&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;fetchSize&apos;: &apos;1000&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; ) ;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM film_static_file_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.72:8020/node8/linkoopdb/manyi/data/100g.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
   &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
) ;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film_actor3(actor_id int, film_id int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:mysql://localhost:3306/test&apos;,   &apos;username&apos;: &apos;root&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film_actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos;,   &apos;asyncEnabled&apos;:&apos;true&apos;,   &apos;orderedWait&apos;:&apos;false&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream film_actor3(actor_id int, film_id int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;film_actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;${dburl}&apos;,   &apos;username&apos;: &apos;${udb}&apos;,   &apos;password&apos;: &apos;${udb_password}&apos;,   &apos;batchSize&apos;: &apos;100&apos;,   &apos;tableName&apos;: &apos;click&apos;,   &apos;increaseColumn&apos;:&apos;film_id&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream join_result_tables(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream join_result_tables_file3(user_id int,film_id bigint,actor_id int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_QUERY_LATENCY_MILLS 20000; insert into join_result_tables select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where user_click_stream.film_id = film_static_jdbc_source.film_id AND film_static_jdbc_source.film_id=film_actor3.film_id  AND film_actor3.actor_id=actor.actor_id;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 8;
insert into join_result_tables_file3 select user_id,film_static_file_source.film_id,actor.actor_id from user_click_stream,film_static_file_source,film_actor3,actor where
user_click_stream.film_id = film_static_file_source.film_id
AND film_static_file_source.film_id=film_actor3.film_id
 AND film_actor3.actor_id=actor.actor_id;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-002-select * from  join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  join_result_tables_file3;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">60000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists film_static_jdbc_source; drop stream if exists user_click_stream; drop stream if exists actor; drop stream if exists film_actor3; drop stream if exists join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables_file3;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 多表join file_all" enabled="false"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables_file4;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="CREATE STREAM film_static_jdbc_source ( FILM_ID bigint, TITLE VARCHAR(30), DESCRIPTION1 VARCHAR(200), DESCRIPTION2 VARCHAR(200), DESCRIPTION3 VARCHAR(200), DESCRIPTION4 VARCHAR(200), DESCRIPTION5 VARCHAR(200), DESCRIPTION6 VARCHAR(200), RELEASE_YEAR INTEGER, LANGUAGE_ID INTEGER ) PROPERTIES (   &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;tableName&apos;: &apos;film_static&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:linkoopdb:tcp://node4:9205/ldb&apos;,   &apos;username&apos;: &apos;admin&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;fetchSize&apos;: &apos;1000&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; ) ;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">CREATE STREAM film_static_file_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.70:8020/node8/linkoopdb/manyi/data/static_table&apos;,
 &apos;format&apos;:&apos;csv&apos;,
   &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;file&apos;,
  &apos;cacheStrategy&apos;:&apos;all&apos;
) ;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,   &apos;username&apos;: &apos;${umysql}&apos;,   &apos;password&apos;: &apos;${umysql_password}&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheType&apos;: &apos;memory&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream actor(actor_id int, first_name varchar(65530), last_name varchar(65530)) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream film_actor3(actor_id int, film_id int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,   &apos;dbUrl&apos;: &apos;jdbc:mysql://localhost:3306/test&apos;,   &apos;username&apos;: &apos;root&apos;,   &apos;password&apos;: &apos;123456&apos;,   &apos;batchSize&apos;: &apos;1&apos;,   &apos;tableName&apos;: &apos;film_actor&apos;,   &apos;dataType&apos;: &apos;static&apos;,   &apos;cacheStrategy&apos;:&apos;lru&apos;,   &apos;asyncEnabled&apos;:&apos;true&apos;,   &apos;orderedWait&apos;:&apos;false&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream film_actor3(actor_id int, film_id int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.mysql.jdbc.Driver&apos;,
  &apos;dbUrl&apos;: &apos;${mysql_url}&apos;,
  &apos;username&apos;: &apos;${umysql}&apos;,
  &apos;password&apos;: &apos;${umysql_password}&apos;,
  &apos;batchSize&apos;: &apos;1&apos;,
  &apos;tableName&apos;: &apos;film_actor&apos;,
  &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;,
   &apos;asyncEnabled&apos;:&apos;true&apos;,
  &apos;orderedWait&apos;:&apos;false&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties( &apos;type&apos;: &apos;source&apos;,   &apos;connector&apos;: &apos;jdbc&apos;,   &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,   &apos;dbUrl&apos;: &apos;${dburl}&apos;,   &apos;username&apos;: &apos;${udb}&apos;,   &apos;password&apos;: &apos;${udb_password}&apos;,   &apos;batchSize&apos;: &apos;100&apos;,   &apos;tableName&apos;: &apos;click&apos;,   &apos;increaseColumn&apos;:&apos;film_id&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream user_click_stream(user_id int, film_id bigint, click_time bigint, user_rank int) properties(
&apos;type&apos;: &apos;source&apos;,
  &apos;connector&apos;: &apos;jdbc&apos;,
  &apos;driver&apos;: &apos;com.datapps.linkoopdb.jdbc.JdbcDriver&apos;,
  &apos;dbUrl&apos;: &apos;${dburl}&apos;,
  &apos;username&apos;: &apos;${udb}&apos;,
  &apos;password&apos;: &apos;${udb_password}&apos;,
  &apos;batchSize&apos;: &apos;100&apos;,
  &apos;tableName&apos;: &apos;click&apos;,
  &apos;increaseColumn&apos;:&apos;film_id&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="create stream join_result_tables(user_id int,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(   &apos;connector&apos;: &apos;pallas&apos; );" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">create stream join_result_tables_file4(user_id int,film_id bigint,actor_id int) properties(
  &apos;connector&apos;: &apos;pallas&apos;
);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="set session STREAM_QUERY_LATENCY_MILLS 20000; insert into join_result_tables select user_id,film_static_jdbc_source.film_id,actor.actor_id from user_click_stream,film_static_jdbc_source,film_actor3,actor where user_click_stream.film_id = film_static_jdbc_source.film_id AND film_static_jdbc_source.film_id=film_actor3.film_id  AND film_actor3.actor_id=actor.actor_id;" enabled="true">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into join_result_tables_file4 select user_id,film_static_file_source.film_id,actor.actor_id from user_click_stream,film_static_file_source,film_actor3,actor where
user_click_stream.film_id = film_static_file_source.film_id
AND film_static_file_source.film_id=film_actor3.film_id
 AND film_actor3.actor_id=actor.actor_id;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">10000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-002-select * from  join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select * from  join_result_tables_file4;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">60000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                    <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                    <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                    <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                    <stringProp name="148829788">4000	null	null	null	1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists film_static_jdbc_source; drop stream if exists user_click_stream; drop stream if exists actor; drop stream if exists film_actor3; drop stream if exists join_result_tables;" enabled="false">
                <stringProp name="dataSource">${u1}</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists actor;
drop stream if exists film_actor3;
drop stream if exists join_result_tables_file4;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2581 LDBX081-64 流表和结果表为kafka，维表是filesystem，left join" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="2581 LDBX081-64 删除维表和流表" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists kafka_join_source_2581;
drop stream if exists left_join_2581_001;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="2581 LDBX081-64 创建filesystem_source维表" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">CREATE STREAM film_static_file_source (
FILM_ID bigint,
TITLE VARCHAR(30),
DESCRIPTION1 VARCHAR(200),
DESCRIPTION2 VARCHAR(200),
DESCRIPTION3 VARCHAR(200),
DESCRIPTION4 VARCHAR(200),
DESCRIPTION5 VARCHAR(200),
DESCRIPTION6 VARCHAR(200),
RELEASE_YEAR INTEGER,
LANGUAGE_ID INTEGER
) PROPERTIES (
&apos;type&apos;:&apos;source&apos;,
&apos;connector&apos;:&apos;filesystem&apos;,
&apos;path&apos;:&apos;hdfs://192.168.1.72:8020/node8/linkoopdb/manyi/data/100g_kafka.csv&apos;,
 &apos;format&apos;:&apos;csv&apos;,
   &apos;dataType&apos;: &apos;static&apos;,
  &apos;cacheType&apos;: &apos;memory&apos;,
  &apos;cacheStrategy&apos;:&apos;lru&apos;
) ;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="2581 LDBX081-64 创建kafka_source" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create stream kafka_join_source_2581(user_id bigint, film_id bigint, click_time bigint, user_rank int) properties(
 &apos;type&apos;: &apos;source&apos;,
 &apos;connector&apos;: &apos;kafka&apos;,
 &apos;version&apos;: &apos;0.10&apos;,
 &apos;topic&apos;: &apos;user_click&apos;,
 &apos;zookeeper.connect&apos;: &apos;node1:2181,node2:2181,node9:2181/linkoopdb/luyao&apos;,
 &apos;group.id&apos;: &apos;user_click&apos;,
 &apos;bootstrap.servers&apos;: &apos;node6:29096&apos;,
 &apos;format&apos;: &apos;csv&apos; ,
 &apos;separator&apos;:&apos;,&apos;
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="2581 LDBX081-64 创建结果表kafka_sink" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create stream left_join_2581_001(user_id bigint,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
 &apos;type&apos;: &apos;sink&apos;,
 &apos;connector&apos;: &apos;kafka&apos;,
 &apos;version&apos;: &apos;0.10&apos;,
 &apos;topic&apos;: &apos;left_join_2581_001&apos;,
 &apos;zookeeper.connect&apos;: &apos;node1:2181,node2:2181,node9:2181/linkoopdb/luyao&apos;,
 &apos;group.id&apos;: &apos;left_join_2581_001&apos;,
 &apos;bootstrap.servers&apos;: &apos;node6:29096&apos;,
 &apos;format&apos;: &apos;csv&apos; ,
 &apos;separator&apos;:&apos;,&apos;
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="2581 LDBX081-64 TC-001-left join的结果插入结果表" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">set session STREAM_EXECUTE_PARALLELISM 10;
insert into left_join_2581_001 select user_id,film_static_file_source.film_id,title,release_year,user_rank from kafka_join_source_2581 left join film_static_file_source on kafka_join_source_2581.film_id = film_static_file_source.film_id;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">20000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="2581 LDBX081-64 创建结果表kafka_sink" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">create stream left_join_source_2581_001(user_id bigint,film_id bigint,title VARCHAR(30),RELEASE_YEAR INTEGER,user_rank int) properties(
 &apos;type&apos;: &apos;source&apos;,
 &apos;connector&apos;: &apos;kafka&apos;,
 &apos;version&apos;: &apos;0.10&apos;,
 &apos;topic&apos;: &apos;left_join_2581_001&apos;,
 &apos;zookeeper.connect&apos;: &apos;node1:2181,node2:2181,node9:2181/linkoopdb/luyao&apos;,
 &apos;group.id&apos;: &apos;left_join_source_2581_002&apos;,
 &apos;bootstrap.servers&apos;: &apos;node6:29096&apos;,
 &apos;format&apos;: &apos;csv&apos; ,
 &apos;separator&apos;:&apos;,&apos;
);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="TC-001-select * from  left_join_result;" enabled="true">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select * from  left_join_source_2581_001;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-382054336">USER_ID	FILM_ID	TITLE	RELEASE_YEAR	USER_RANK
</stringProp>
                <stringProp name="1364907863">1000	10	ALADDIN CALENDAR	2006-01-01	2
</stringProp>
                <stringProp name="-464439926">2000	11	ALAMO VIDEOTAPE	2006-01-01	3
</stringProp>
                <stringProp name="-1998960978">3000	12	ALASKA PHANTOM	2006-01-01	4
</stringProp>
                <stringProp name="148829788">4000	null	null	null	1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="drop stream if exists join_film; drop stream if exists user_click_stream;" enabled="false">
            <stringProp name="dataSource">${u1}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">drop stream if exists film_static_file_source;
drop stream if exists user_click_stream;
drop stream if exists left_join_result1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
